@using SlackPollingApp.Model.Entity
<div centered="true" class="modal fade" id="@ModalId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Poll results</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4 class="modal-heading">@Poll.Title</h4>

                @foreach (var pollOption in Poll.Options)
                {
                    <ResultBar TotalVotes="@_voteCount" Option="@pollOption" />
                }
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] 
    public string ModalId { get; set; }
    [Parameter]
    public Poll Poll { get; set; }

    private int _voteCount;

    protected override Task OnParametersSetAsync()
    {
        _voteCount = Poll.Options.Sum(o => o.Votes.Count);
        return base.OnParametersSetAsync();
    }

}